import AsyncStorage from '@react-native-async-storage/async-storage';
import NetInfo from '@react-native-community/netinfo';

// –ò–º–∏—Ç–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
const API_BASE_URL = 'http://localhost:3000';

export const taskService = {
  async syncTasks(tasks) {
    const netInfo = await NetInfo.fetch();
    
    if (netInfo.isConnected) {
      try {
        console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á —Å —Å–µ—Ä–≤–µ—Ä–æ–º...');
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É
        const success = Math.random() > 0.2; // 80% —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        
        if (success) {
          console.log('‚úÖ –ó–∞–¥–∞—á–∏ —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
          await AsyncStorage.setItem('lastSync', new Date().toISOString());
          await AsyncStorage.removeItem('pendingSync');
          return true;
        } else {
          throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
        }
      } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error.message);
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        await AsyncStorage.setItem('pendingSync', JSON.stringify({
          tasks: tasks,
          timestamp: new Date().toISOString(),
        }));
        return false;
      }
    } else {
      console.log('üì∂ –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Ç–ª–æ–∂–µ–Ω–∞');
      await AsyncStorage.setItem('pendingSync', JSON.stringify({
        tasks: tasks,
        timestamp: new Date().toISOString(),
      }));
      return false;
    }
  },

  async getPendingSync() {
    try {
      const pending = await AsyncStorage.getItem('pendingSync');
      return pending ? JSON.parse(pending) : null;
    } catch (error) {
      console.log('Error getting pending sync:', error);
      return null;
    }
  },

  async clearPendingSync() {
    try {
      await AsyncStorage.removeItem('pendingSync');
    } catch (error) {
      console.log('Error clearing pending sync:', error);
    }
  }
};